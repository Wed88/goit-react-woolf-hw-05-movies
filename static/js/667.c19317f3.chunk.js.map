{"version":3,"file":"static/js/667.c19317f3.chunk.js","mappings":"2LAEaA,EAAa,SAAHC,GAA6B,IAAvBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAClC,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGH,EAAMI,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAI,OAC3BN,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,GAAMM,MAAO,CAAEC,KAAMZ,GAAWE,SAClDI,GAASC,KAFLF,EAIJ,KAIb,C,oLCPaQ,EAAa,WACxB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Bf,EAAKiB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBxB,GAAW2B,EAAAA,EAAAA,MAEjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAb,EAAAA,EAAAA,GAAAW,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAO,CAAC,IACKG,EAAU,eAAAtC,GAAAuC,EAAAA,EAAAA,GAAAC,IAAAA,MAAzB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACmB,OAAjBjB,GAAW,GAAMe,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,IAAqBX,GAAO,KAAD,EAApC,GACkB,KADtBO,EAAIC,EAAAI,MACDC,QAAQC,OAAY,CAAAN,EAAAE,KAAA,QACkB,OAA7CK,EAAAA,GAAAA,MAAY,iCAAiCP,EAAAQ,OAAA,iBAI/C/B,EAASsB,EAAKM,SAASL,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEvBnB,EAAQmB,EAAAS,IAAQ,QAEE,OAFFT,EAAAC,KAAA,GAEhBhB,GAAW,GAAOe,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAb,EAAA,yBAErB,kBAfwB,OAAAzC,EAAAuD,MAAC,KAADC,UAAA,KAgBzBlB,GACF,CACF,GAAG,CAACH,IAcJ,OACEsB,EAAAA,EAAAA,MAAA,QAAArD,SAAA,CACGmB,IAASkC,EAAAA,EAAAA,MAAA,KAAArD,SAAA,CAAG,iCAA+BmB,EAAMmC,WACjD/B,IAAWxB,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,KACnBF,EAAAA,EAAAA,MAAA,QAAMG,SAhBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAC0B,KAArCD,EAAKE,SAAS9B,MAAM+B,MAAMC,SAI9BjC,EAAgB,CAAEC,MAAO4B,EAAKE,SAAS9B,MAAM+B,QAE7CH,EAAKK,QACP,EAMkCC,aAAa,MAAKjE,SAAA,EAC9CD,EAAAA,EAAAA,KAAA,SAAOmE,KAAK,OAAO7D,KAAK,QAAQ8D,YAAY,gBAC5CpE,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,eAERmB,EAAQ,IAAKpB,EAAAA,EAAAA,KAACJ,EAAAA,EAAU,CAACE,MAAOA,EAAOC,SAAUA,MAGzD,C","sources":["components/MoviesList/MoviesList.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ items, location }) => {\n  return (\n    <ul>\n      {items.map(({ id, title, name }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieBySearchName } from '../../services/themoviedbAPI';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport Loader from '../../components/Loader/Loader';\n\nexport const MoviesPage = () => {\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      async function fetchItems() {\n        setLoading(true);\n        try {\n          const data = await getMovieBySearchName(query);\n          if (data.results.length === 0) {\n            toast.error(' Enter the correct movie name');\n            return;\n          }\n\n          setItems(data.results);\n        } catch (error) {\n          setError(error);\n        } finally {\n          setLoading(false);\n        }\n      }\n      fetchItems();\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.elements.query.value.trim() === '') {\n      return;\n    }\n\n    setSearchParams({ query: form.elements.query.value });\n\n    form.reset();\n  };\n\n  return (\n    <main>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {loading && <Loader />}\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input type=\"text\" name=\"query\" placeholder=\"Enter name\" />\n        <button>Search</button>\n      </form>\n      {!error > 0 && <MoviesList items={items} location={location} />}\n    </main>\n  );\n};\n"],"names":["MoviesList","_ref","items","location","_jsx","children","map","_ref2","id","title","name","Link","to","concat","state","from","MoviesPage","_useState","useState","_useState2","_slicedToArray","setItems","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","fetchItems","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieBySearchName","sent","results","length","toast","abrupt","t0","finish","stop","apply","arguments","_jsxs","message","Loader","onSubmit","e","preventDefault","form","currentTarget","elements","value","trim","reset","autoComplete","type","placeholder"],"sourceRoot":""}