{"version":3,"file":"static/js/824.ac3902eb.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {items.map(({ id, title, name }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\n\nexport const SearchForm = ({ handleSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (query) {\n      handleSubmit(query);\n    }\n  };\n\n  const onChange = e => {\n    setQuery(e.target.value.trim());\n  };\n\n  return (\n    <form onSubmit={onSubmit} onChange={onChange} autoComplete=\"off\">\n      <input type=\"text\" name=\"query\" placeholder=\"Enter name\" />\n      <button>Search</button>\n    </form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieBySearchName } from '../../services/themoviedbAPI';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport Loader from '../../components/Loader/Loader';\n\nexport const MoviesPage = () => {\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      async function fetchItems() {\n        setLoading(true);\n        try {\n          const data = await getMovieBySearchName(query);\n          if (data.results.length === 0) {\n            toast.error(' Enter the correct movie name');\n            return;\n          }\n\n          setItems(data.results);\n        } catch (error) {\n          setError(error);\n        } finally {\n          setLoading(false);\n        }\n      }\n      fetchItems();\n    }\n  }, [query]);\n\n  const handleSubmit = query => {\n    if (query) {\n      setSearchParams({ query });\n    }\n  };\n\n  return (\n    <main>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {loading && <Loader />}\n      <SearchForm\n        query={searchParams.get('query')}\n        handleSubmit={handleSubmit}\n      />\n      {!error > 0 && <MoviesList items={items} />}\n    </main>\n  );\n};\n"],"names":["MoviesList","_ref","items","location","useLocation","_jsx","children","map","_ref2","id","title","name","Link","to","concat","state","from","SearchForm","handleSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","e","preventDefault","onChange","target","value","trim","autoComplete","type","placeholder","MoviesPage","setItems","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","fetchItems","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovieBySearchName","sent","results","length","toast","abrupt","t0","finish","stop","apply","arguments","message","Loader"],"sourceRoot":""}